{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\nscno1\\\\pages\\\\metamasklogin.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      web3: null,\n      accounts: null,\n      challenge: null,\n      signature: null\n    });\n\n    _defineProperty(this, \"getChallenge\", async () => {\n      const {\n        accounts\n      } = this.state;\n      console.log(\"accounts\", accounts);\n      console.log(\"show ==> accounts[0]\", accounts[0]);\n      const res = await fetch(`http://localhost:5001/auth/${accounts[0]}`);\n      this.setState({\n        challenge: await res.json()\n      });\n    });\n\n    _defineProperty(this, \"signChallenge\", async () => {\n      const {\n        web3,\n        challenge,\n        accounts\n      } = this.state;\n      web3.currentProvider.sendAsync({\n        method: \"eth_signTypedData\",\n        params: [challenge, accounts[0]],\n        from: accounts[0]\n      }, (error, res) => {\n        if (error) return console.error(error);\n        this.setState({\n          signature: res.result\n        });\n      });\n    });\n\n    _defineProperty(this, \"verifySignature\", async () => {\n      const {\n        challenge,\n        signature,\n        accounts\n      } = this.state;\n      const res = await fetch(`http://localhost:5001/auth/${challenge[1].value}/${signature}`);\n      const recovered = await res.text();\n\n      if (res.status === 200 && recovered === accounts[0].toLowerCase()) {\n        console.log(\"Signature verified\");\n      } else {\n        console.log(\"Signature not verified\");\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"show accout new new \", accounts);\n    this.setState({\n      web3,\n      accounts\n    });\n  }\n\n  render() {\n    const {\n      web3,\n      challenge,\n      signature\n    } = this.state;\n    if (!web3) return \"Loading...\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getChallenge,\n        children: \"Get Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.signChallenge,\n        disabled: !challenge,\n        children: \"Sign Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.verifySignature,\n        disabled: !signature,\n        children: \"Verify Signature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), challenge && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(challenge, null, 4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), signature && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Signature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: signature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/nscno1/pages/metamasklogin.js"],"names":["React","Component","getWeb3","App","web3","accounts","challenge","signature","state","console","log","res","fetch","setState","json","currentProvider","sendAsync","method","params","from","error","result","value","recovered","text","status","toLowerCase","componentDidMount","eth","getAccounts","render","getChallenge","signChallenge","verifySignature","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport getWeb3 from \"./getWeb3\";\r\nclass App extends Component {\r\n  state = { web3: null, accounts: null, challenge: null, signature: null };\r\n\r\n  async componentDidMount() {\r\n    const web3 = await getWeb3();\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log(\"show accout new new \",accounts)\r\n    this.setState({ web3, accounts });\r\n  }\r\n\r\n  getChallenge = async () => {\r\n    const { accounts } = this.state;\r\n    console.log(\"accounts\",accounts)\r\n    console.log(\"show ==> accounts[0]\",accounts[0])\r\n    const res = await fetch(\r\n      `http://localhost:5001/auth/${accounts[0]}`\r\n    );\r\n    this.setState({ challenge: await res.json() });\r\n  };\r\n//0x6c25FE295Ecee6F0D8D34fC28dca2de68538fA4a\r\n  signChallenge = async () => {\r\n    const { web3, challenge, accounts } = this.state;\r\n    web3.currentProvider.sendAsync(\r\n      {\r\n        method: \"eth_signTypedData\",\r\n        params: [challenge, accounts[0]],\r\n        from: accounts[0]\r\n      },\r\n      (error, res) => {\r\n        if (error) return console.error(error);\r\n        this.setState({ signature: res.result });\r\n      }\r\n    );\r\n  };\r\n\r\n  verifySignature = async () => {\r\n    const { challenge, signature, accounts } = this.state;\r\n    const res = await fetch(\r\n      `http://localhost:5001/auth/${challenge[1].value}/${signature}`\r\n    );\r\n    const recovered = await res.text();\r\n    if (res.status === 200 && recovered === accounts[0].toLowerCase()) {\r\n      console.log(\"Signature verified\");\r\n    } else {\r\n      console.log(\"Signature not verified\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { web3, challenge, signature } = this.state;\r\n    if (!web3) return \"Loading...\";\r\n    return (\r\n      <div className=\"App\">\r\n        <button onClick={this.getChallenge}>Get Challenge</button>\r\n        <button onClick={this.signChallenge} disabled={!challenge}>\r\n          Sign Challenge\r\n        </button>\r\n        <button onClick={this.verifySignature} disabled={!signature}>\r\n          Verify Signature\r\n        </button>\r\n\r\n        {challenge && (\r\n          <div className=\"data\">\r\n            <h2>Challenge</h2>\r\n            <pre>{JSON.stringify(challenge, null, 4)}</pre>\r\n          </div>\r\n        )}\r\n\r\n        {signature && (\r\n          <div className=\"data\">\r\n            <h2>Signature</h2>\r\n            <pre>{signature}</pre>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}