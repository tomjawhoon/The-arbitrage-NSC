{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\Workshopnext-Full-1550BATH\\\\pages\\\\gettoken.tsx\";\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport CoinGecko from 'coingecko-api';\nconst coinGeckoClient = new CoinGecko();\nexport default function Home(props) {\n  const {\n    data\n  } = props.result;\n  console.log(\"show data get coinmarket --->\", data);\n\n  const formatPercent = number => `${new Number(number).toFixed(2)}%`;\n\n  const formatDollar = (number, maximumSignificantDigits) => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumSignificantDigits\n  }).format(number);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Coinmarketcap clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coinmarketcap clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"24H Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Market cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(coin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.image,\n              style: {\n                width: 25,\n                height: 25,\n                marginRight: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), coin.symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: coin.price_change_percentage_24h > 0 ? 'text-success' : 'text-danger',\n              children: formatPercent(coin.price_change_percentage_24h)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDollar(coin.current_price, 20)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDollar(coin.market_cap, 12)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, coin.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC\n  };\n  const result = await coinGeckoClient.coins.markets({\n    params\n  });\n  return {\n    props: {\n      result\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/Workshopnext-Full-1550BATH/pages/gettoken.tsx"],"names":["Head","styles","CoinGecko","coinGeckoClient","Home","props","data","result","console","log","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","container","map","coin","image","width","height","marginRight","symbol","toUpperCase","price_change_percentage_24h","current_price","market_cap","id","getServerSideProps","context","params","order","ORDER","MARKET_CAP_DESC","coins","markets"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport styles from '../styles/Home.module.css'\r\nimport CoinGecko from 'coingecko-api';\r\nconst coinGeckoClient = new CoinGecko();\r\n\r\nexport default function Home(props) {\r\n    const { data } = props.result;\r\n    console.log(\"show data get coinmarket --->\",data)\r\n\r\n    const formatPercent = number =>\r\n        `${new Number(number).toFixed(2)}%`\r\n\r\n    const formatDollar = (number, maximumSignificantDigits) =>\r\n        new Intl.NumberFormat(\r\n            'en-US',\r\n            {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n                maximumSignificantDigits\r\n            })\r\n            .format(number);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Head>\r\n                <title>Coinmarketcap clone</title>\r\n                <link rel=\"icon\" href=\"/favicon.ico\" />\r\n            </Head>\r\n\r\n            <h1>Coinmarketcap clone</h1>\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Symbol</th>\r\n                        <th>24H Change</th>\r\n                        <th>Price</th>\r\n                        <th>Market cap</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(coin => (\r\n                        <tr key={coin.id}>\r\n                            <td>\r\n                                <img\r\n                                    src={coin.image}\r\n                                    style={{ width: 25, height: 25, marginRight: 10 }}\r\n                                />\r\n                                {coin.symbol.toUpperCase()}\r\n                            </td>\r\n                            <td>\r\n                                <span\r\n                                    className={coin.price_change_percentage_24h > 0 ? (\r\n                                        'text-success'\r\n                                    ) : 'text-danger'}\r\n                                >\r\n                                    {formatPercent(coin.price_change_percentage_24h)}\r\n                                </span>\r\n                            </td>\r\n                            <td>{formatDollar(coin.current_price, 20)}</td>\r\n                            <td>{formatDollar(coin.market_cap, 12)}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n    const params = {\r\n        order: CoinGecko.ORDER.MARKET_CAP_DESC\r\n    };\r\n    const result = await coinGeckoClient.coins.markets({ params });\r\n    return {\r\n        props: {\r\n            result\r\n        },\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}