{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\The-arbitrage-NSC\\\\pages\\\\totalgetcoin.tsx\";\nimport React, { useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nexport default function Totalgetcoin(props, initialId) {\n  const {\n    0: newId,\n    1: setNewId\n  } = useState(initialId);\n  const {\n    0: Price,\n    1: setPrice\n  } = useState(0);\n  const {\n    0: Price1,\n    1: setPrice1\n  } = useState(0);\n  const {\n    0: Price2,\n    1: setPrice2\n  } = useState(0);\n  const WETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n  const DAI = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n  const OMG = \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\";\n  const MKR = \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\";\n  const USDT = \"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\";\n  console.log(\"newId\", newId); // const [Price, setPrice] = useState(0)\n  // const [Hash, setHash] = useState(0)\n\n  async function onSave(valueinput) {\n    //const total = []\n    console.log(\"valueinput\", valueinput);\n    const response = await axios.post('http://localhost:5001/totalcoin', {\n      //ETH\n      valueinput,\n      //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n      fromtoken: WETH,\n      //WETH -MKR\n      totoken: MKR\n    });\n    setPrice(response.data);\n    console.log(\"FROM NODE = MKR = \", response.data); // console.log(\"from node \", response.data)\n\n    const response2 = await axios.post('http://localhost:5001/totalcoin', {\n      // valueinput: valueinput,\n      valueinput: response.data.toString(),\n      fromtoken: MKR,\n      //WETH -MKR\n      totoken: DAI\n    });\n    setPrice1(response2.data);\n    console.log(\"FROM NODE = DAI = \", response2.data);\n    const response3 = await axios.post('http://localhost:5001/totalcoin', {\n      // valueinput: valueinput,\n      valueinput: response2.data.toString(),\n      fromtoken: DAI,\n      //WETH -MKR\n      totoken: WETH\n    });\n    setPrice2(response3.data);\n    console.log(\"FROM NODE = WETH = \", response3.data); //     const response4 = await axios.post('http://localhost:5001/totalcoin', {\n    //         // valueinput: valueinput,\n    //         valueinput: response3.data,\n    //         //response4 = eth\n    //     })\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          onChange: e => setNewId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"MKR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          value: Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"DAI:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: Price1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: Price2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => onSave(newId),\n      children: \"Exchang Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      columns: [{\n        title: \"Symbol\",\n        field: 'image'\n      }, {\n        title: \"Name\",\n        field: 'name'\n      }, {\n        title: \"24H Change\",\n        field: 'price24'\n      }, {\n        title: \"\tPrice ($)\",\n        field: 'current_price'\n      }, {\n        title: \"\tMarket cap ($)\",\n        field: 'market_cap'\n      }],\n      data: {\n        image: Price,\n        name: Price1,\n        price24: Price2\n      } //{ image: \"test\", price24: \"test\", Price: \"test\", Marketcap: \"test\" },\n      ,\n      title: \"Coinmarketcap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/The-arbitrage-NSC/pages/totalgetcoin.tsx"],"names":["React","useState","MaterialTable","Button","axios","Totalgetcoin","props","initialId","newId","setNewId","Price","setPrice","Price1","setPrice1","Price2","setPrice2","WETH","DAI","OMG","MKR","USDT","console","log","onSave","valueinput","response","post","fromtoken","totoken","data","response2","toString","response3","e","target","value","title","field","image","name","price24"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport React, { ReactElement, useState } from 'react'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\ninterface Props {\r\n    result: { data: any; };\r\n    initialId: any,\r\n    valueinput: any,\r\n}\r\nexport default function Totalgetcoin(props, initialId: Props): ReactElement {\r\n    const [newId, setNewId] = useState(initialId)\r\n    const [Price, setPrice] = useState(0)\r\n    const [Price1, setPrice1] = useState(0)\r\n    const [Price2, setPrice2] = useState(0)\r\n    const WETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\r\n    const DAI = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\r\n    const OMG = \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\";\r\n    const MKR = \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\";\r\n    const USDT = \"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\";\r\n    console.log(\"newId\", newId)\r\n    // const [Price, setPrice] = useState(0)\r\n    // const [Hash, setHash] = useState(0)\r\n    async function onSave(valueinput: any) {\r\n        //const total = []\r\n        console.log(\"valueinput\", valueinput);\r\n        const response = await axios.post('http://localhost:5001/totalcoin', { //ETH\r\n            valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\r\n            fromtoken: WETH, //WETH -MKR\r\n            totoken: MKR,\r\n        })\r\n        setPrice(response.data)\r\n        console.log(\"FROM NODE = MKR = \", response.data);\r\n        // console.log(\"from node \", response.data)\r\n        const response2 = await axios.post('http://localhost:5001/totalcoin', {\r\n            // valueinput: valueinput,\r\n            valueinput: response.data.toString(),\r\n            fromtoken: MKR, //WETH -MKR\r\n            totoken: DAI,\r\n        })\r\n        setPrice1(response2.data)\r\n        console.log(\"FROM NODE = DAI = \", response2.data);\r\n        const response3 = await axios.post('http://localhost:5001/totalcoin', {\r\n            // valueinput: valueinput,\r\n            valueinput: response2.data.toString(),\r\n            fromtoken: DAI, //WETH -MKR\r\n            totoken: WETH,\r\n        })\r\n        setPrice2(response3.data)\r\n        console.log(\"FROM NODE = WETH = \", response3.data);\r\n        //     const response4 = await axios.post('http://localhost:5001/totalcoin', {\r\n        //         // valueinput: valueinput,\r\n        //         valueinput: response3.data,\r\n        //         //response4 = eth\r\n        //     })\r\n    }\r\n    return (\r\n        <>\r\n            <form>\r\n                <label>\r\n                    ETH:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" onChange={(e) => setNewId(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    MKR:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" value={Price} />\r\n                </label>\r\n                <label>\r\n                    DAI:<input type=\"text\" name=\"name\" value={Price1} />\r\n                </label>\r\n                <label>\r\n                    ETH:<input type=\"text\" name=\"name\" value={Price2} />\r\n                </label>\r\n            </form>\r\n            <br></br>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => onSave(newId)}\r\n            >\r\n                Exchang Token\r\n                        </Button>\r\n\r\n                        <MaterialTable\r\n                columns={[\r\n                    { title: \"Symbol\", field: 'image' },\r\n                    { title: \"Name\", field: 'name' },\r\n                    { title: \"24H Change\", field: 'price24' },\r\n                    { title: \"\tPrice ($)\", field: 'current_price' },\r\n                    { title: \"\tMarket cap ($)\", field: 'market_cap' },\r\n                ]}\r\n                data={\r\n                        {\r\n                            image:Price,\r\n                            name: Price1,\r\n                            price24: Price2,\r\n\r\n                        }\r\n                  }\r\n                //{ image: \"test\", price24: \"test\", Price: \"test\", Marketcap: \"test\" },\r\n                title=\"Coinmarketcap\" />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}