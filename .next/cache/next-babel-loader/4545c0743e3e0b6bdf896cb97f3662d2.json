{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\nscno1\\\\pages\\\\test.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Layout from '../components/layouts/layout';\nimport MaterialTable from 'material-table';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nvar useStylesbuttom = makeStyles(function (theme) {\n  return createStyles({\n    button: {\n      margin: theme.spacing(1)\n    }\n  });\n});\nvar useStyles = makeStyles({\n  root: {\n    maxWidth: 800\n  },\n  media: {\n    height: 800\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"left\",\n    alignItems: \"left\",\n    minHeight: \"50vh\"\n  },\n  test: {\n    display: \"flex\",\n    marginLeft: \"500px\"\n  },\n  testright: {\n    display: \"flex\",\n    marginLeft: \"1000px\",\n    marginTop: \"-350px\"\n  }\n});\nvar useStylesRight = makeStyles({\n  root: {\n    maxWidth: 350,\n    marginTop: \"-380px\",\n    marginLeft: \"950px\"\n  },\n  media: {\n    height: 500\n  }\n});\nexport var __N_SSP = true;\nexport default function Test(props, initialId) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(initialId),\n      newId = _useState[0],\n      setNewId = _useState[1];\n\n  var _useState2 = useState(0),\n      Price = _useState2[0],\n      setPrice = _useState2[1];\n\n  console.log(\"Price\", Price);\n\n  function onSave(valueinput) {\n    console.log(\"valueinput\", valueinput);\n    axios.post('http://localhost:5001/testgetdata', {\n      //name: 'EIEIEI',\n      //number: 55,\n      valueinput: valueinput\n    }).then(function (response) {\n      console.log(\"response\", response.data); //1000.000\n\n      setPrice(response.data);\n    });\n  }\n\n  function toswap(valueswap) {\n    console.log(\"valueswap\", valueswap);\n    axios.post('http://localhost:5001/swaptoken', {\n      valueswap: valueswap\n    }).then(function (response) {\n      console.log(\"response\", response.data); //1000.000\n\n      setPrice(response.data);\n    });\n  }\n\n  var data = props.result.data; //console.log(\"Show---->getAPI---->\", data)\n\n  var formatPercent = function formatPercent(number) {\n    return \"\".concat(new Number(number).toFixed(2), \"%\");\n  };\n\n  var formatDollar = function formatDollar(number, maximumSignificantDigits) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumSignificantDigits: maximumSignificantDigits\n    }).format(number);\n  };\n\n  var classestest = useStylesbuttom();\n  var classes = useStyles();\n  var classesRight = useStylesRight();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.test,\n          children: [\"Balance:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Token: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: \"WETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          onChange: function onChange(e) {\n            return setNewId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classestest.button,\n          onClick: function onClick() {\n            return onSave(newId);\n          },\n          children: \"Exchang Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Token:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: \"MKR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          value: Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classestest.button,\n          onClick: function onClick() {\n            return onSave(newId);\n          },\n          children: \"SWAP TOKEN IN UNISWAP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      columns: [{\n        title: \"Symbol\",\n        field: 'image'\n      }, {\n        title: \"Name\",\n        field: 'name'\n      }, {\n        title: \"24H Change\",\n        field: 'price24'\n      }, {\n        title: \"\tPrice ($)\",\n        field: 'current_price'\n      }, {\n        title: \"\tMarket cap ($)\",\n        field: 'market_cap'\n      }],\n      data: data.map(function (coin) {\n        return {\n          image: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: coin.image,\n            style: {\n              width: 25,\n              height: 25,\n              marginRight: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 36\n          }, _this),\n          name: coin.symbol.toUpperCase(),\n          price24: formatPercent(coin.price_change_percentage_24h),\n          current_price: coin.current_price,\n          market_cap: coin.market_cap\n        };\n      }) //{ image: \"test\", price24: \"test\", Price: \"test\", Marketcap: \"test\" },\n      ,\n      title: \"Coinmarketcap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"zc7OOIKcP2DcjZ8z8og8DRsMD4U=\", false, function () {\n  return [useStylesbuttom, useStyles, useStylesRight];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/nscno1/pages/test.tsx"],"names":["React","useState","createStyles","makeStyles","Layout","MaterialTable","Card","Button","axios","useStylesbuttom","theme","button","margin","spacing","useStyles","root","maxWidth","media","height","container","display","flexDirection","justifyContent","alignItems","minHeight","test","marginLeft","testright","marginTop","useStylesRight","Test","props","initialId","newId","setNewId","Price","setPrice","console","log","onSave","valueinput","post","then","response","data","toswap","valueswap","result","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","classestest","classes","classesRight","e","target","value","title","field","map","coin","image","width","marginRight","name","symbol","toUpperCase","price24","price_change_percentage_24h","current_price","market_cap"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Header from '../components/layouts/header'\r\nimport Layout from '../components/layouts/layout'\r\nimport Menu from '../components/layouts/menu'\r\nimport CoinGecko from 'coingecko-api';\r\nconst coinGeckoClient = new CoinGecko();\r\nimport MaterialTable from 'material-table'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Theme } from '@material-ui/core';\r\nimport axios from 'axios';\r\nconst useStylesbuttom = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 800,\r\n    },\r\n    media: {\r\n        height: 800,\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"left\",\r\n        minHeight: \"50vh\",\r\n    },\r\n    test: {\r\n        display: \"flex\",\r\n        marginLeft: \"500px\",\r\n    },\r\n    testright: {\r\n        display: \"flex\",\r\n        marginLeft: \"1000px\",\r\n        marginTop: \"-350px\"\r\n\r\n    }\r\n});\r\n\r\nconst useStylesRight = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        marginTop: \"-380px\",\r\n        marginLeft: \"950px\",\r\n    },\r\n    media: {\r\n        height: 500,\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    result: { data: any; };\r\n    initialId: any,\r\n    valueinput: any,\r\n\r\n}\r\nexport async function getServerSideProps(context) {\r\n    const params = {\r\n        order: CoinGecko.ORDER.MARKET_CAP_DESC\r\n    };\r\n    const result = await coinGeckoClient.coins.markets({ params });\r\n    return {\r\n        props: {\r\n            result\r\n        },\r\n    }\r\n}\r\nexport default function Test(props, initialId: Props): ReactElement {\r\n    const [newId, setNewId] = useState(initialId)\r\n    const [Price, setPrice] = useState(0)\r\n    console.log(\"Price\", Price)\r\n    function onSave(valueinput: any) {\r\n        console.log(\"valueinput\", valueinput);\r\n        axios.post('http://localhost:5001/testgetdata', {\r\n            //name: 'EIEIEI',\r\n            //number: 55,\r\n            valueinput,\r\n        }).then(response => {\r\n            console.log(\"response\", response.data); //1000.000\r\n            setPrice(response.data)\r\n        });\r\n    }\r\n\r\n    function toswap(valueswap: any) {\r\n        console.log(\"valueswap\", valueswap);\r\n        axios.post('http://localhost:5001/swaptoken', {\r\n            valueswap,\r\n        }).then(response => {\r\n            console.log(\"response\", response.data); //1000.000\r\n            setPrice(response.data)\r\n        });\r\n    }\r\n    const { data } = props.result;\r\n    //console.log(\"Show---->getAPI---->\", data)\r\n    const formatPercent = number =>\r\n        `${new Number(number).toFixed(2)}%`\r\n\r\n    const formatDollar = (number, maximumSignificantDigits) =>\r\n        new Intl.NumberFormat(\r\n            'en-US',\r\n            {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n                maximumSignificantDigits\r\n            })\r\n            .format(number);\r\n    const classestest = useStylesbuttom();\r\n    const classes = useStyles();\r\n    const classesRight = useStylesRight();\r\n    return (\r\n        <Layout>\r\n            <div className={classes.container}>\r\n                <Card className={classes.root}>\r\n                    <div className={classes.test}>\r\n                        Balance:\r\n                     <input type=\"text\" name=\"name\" />\r\n                    </div>\r\n\r\n                    <form>\r\n                        <label>\r\n                            Token: <input type=\"text\" name=\"name\" value=\"WETH\" />\r\n                        </label>\r\n                    </form>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter coin\" onChange={(e) => setNewId(e.target.value)} />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classestest.button}\r\n                        onClick={() => onSave(newId)}\r\n                    >\r\n                        Exchang Token\r\n                        </Button>\r\n                    <form>\r\n                        <label>\r\n                            Token:\r\n                     <input type=\"text\" name=\"name\" value=\"MKR\" />\r\n                        </label>\r\n                    </form>\r\n                    <br></br>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter coin\" value={Price} />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classestest.button}\r\n                        onClick={() => onSave(newId)}\r\n                    >\r\n                        SWAP TOKEN IN UNISWAP\r\n                        </Button>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n            <MaterialTable\r\n                columns={[\r\n                    { title: \"Symbol\", field: 'image' },\r\n                    { title: \"Name\", field: 'name' },\r\n                    { title: \"24H Change\", field: 'price24' },\r\n                    { title: \"\tPrice ($)\", field: 'current_price' },\r\n                    { title: \"\tMarket cap ($)\", field: 'market_cap' },\r\n                ]}\r\n                data={\r\n                    data.map((coin) => (\r\n                        {\r\n                            image: <img src={coin.image} style={{ width: 25, height: 25, marginRight: 10 }} />,\r\n                            name: coin.symbol.toUpperCase(),\r\n                            price24: formatPercent(coin.price_change_percentage_24h),\r\n                            current_price: coin.current_price,\r\n                            market_cap: coin.market_cap,\r\n                        }\r\n                    ))}\r\n                //{ image: \"test\", price24: \"test\", Price: \"test\", Marketcap: \"test\" },\r\n                title=\"Coinmarketcap\" />\r\n\r\n        </Layout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}