{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\The-arbitrage-NSC\\\\pages\\\\totalgetcoin.tsx\";\nimport React, { useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nexport default function Totalgetcoin(props, initialId) {\n  const {\n    0: newId,\n    1: setNewId\n  } = useState(initialId);\n  const {\n    0: Price,\n    1: setPrice\n  } = useState(0);\n  const {\n    0: Price1,\n    1: setPrice1\n  } = useState(0);\n  const {\n    0: Price2,\n    1: setPrice2\n  } = useState(0);\n  const WETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n  const DAI = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n  const OMG = \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\";\n  const MKR = \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\";\n  const USDT = \"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\";\n  console.log(\"Price\", Price);\n\n  async function onSave(valueinput) {\n    for (;;) {\n      const sum = [Price, Price1, Price2];\n      const response = await axios.post('http://localhost:5001/totalcoin', {\n        //ETH\n        valueinput,\n        //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n        fromtoken: WETH,\n        //WETH -MKR\n        totoken: MKR\n      });\n      setPrice(response.data);\n      console.log(\"FROM NODE = MKR = \", response.data); // console.log(\"from node \", response.data)\n\n      const response2 = await axios.post('http://localhost:5001/totalcoin', {\n        // valueinput: valueinput,\n        valueinput: response.data.toString(),\n        fromtoken: MKR,\n        //WETH -MKR\n        totoken: DAI\n      });\n      setPrice1(response2.data);\n      console.log(\"FROM NODE = DAI = \", response2.data);\n      const response3 = await axios.post('http://localhost:5001/totalcoin', {\n        // valueinput: valueinput,\n        valueinput: response2.data.toString(),\n        fromtoken: DAI,\n        //WETH -MKR\n        totoken: WETH\n      });\n      setPrice2(response3.data);\n      console.log(\"FROM NODE = WETH = \", response3.data);\n    }\n    /* for (; ;) {\r\n         {\r\n             console.log(\"valueinput\", valueinput);\r\n             const response = await axios.post('http://localhost:5001/totalcoin', { //ETH\r\n                 valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\r\n                 fromtoken: WETH, //WETH -MKR\r\n                 totoken: MKR,\r\n             })\r\n             setPrice(response.data)\r\n             console.log(\"FROM NODE = MKR = \", response.data);\r\n             // console.log(\"from node \", response.data)\r\n             const response2 = await axios.post('http://localhost:5001/totalcoin', {\r\n                 // valueinput: valueinput,\r\n                 valueinput: response.data.toString(),\r\n                 fromtoken: MKR, //WETH -MKR\r\n                 totoken: DAI,\r\n             })\r\n             setPrice1(response2.data)\r\n             console.log(\"FROM NODE = DAI = \", response2.data);\r\n             const response3 = await axios.post('http://localhost:5001/totalcoin', {\r\n                 // valueinput: valueinput,\r\n                 valueinput: response2.data.toString(),\r\n                 fromtoken: DAI, //WETH -MKR\r\n                 totoken: WETH,\r\n             })\r\n             setPrice2(response3.data)\r\n             console.log(\"FROM NODE = WETH = \", response3.data);\r\n         }\r\n     }*/\n    //     const response4 = await axios.post('http://localhost:5001/totalcoin', {\n    //         // valueinput: valueinput,\n    //         valueinput: response3.data,\n    //         //response4 = eth\n    //     })\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          onChange: e => setNewId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"MKR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          value: Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"DAI:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: Price1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: Price2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => onSave(newId),\n      children: \" Exchang Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      columns: [{\n        title: \"ETH\",\n        field: \"START\"\n      }, {\n        title: \"MKR\",\n        field: 'Price'\n      }, {\n        title: \"DAI\",\n        field: 'Price1'\n      }, {\n        title: \"ETH\",\n        field: 'Price2'\n      }],\n      data: [{\n        START: 1,\n        Price: Price,\n        Price1: Price1,\n        Price2: Price2\n      }],\n      title: \"Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/The-arbitrage-NSC/pages/totalgetcoin.tsx"],"names":["React","useState","MaterialTable","Button","axios","Totalgetcoin","props","initialId","newId","setNewId","Price","setPrice","Price1","setPrice1","Price2","setPrice2","WETH","DAI","OMG","MKR","USDT","console","log","onSave","valueinput","sum","response","post","fromtoken","totoken","data","response2","toString","response3","e","target","value","title","field","START"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport React, { ReactElement, useState } from 'react'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table'\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\ninterface Props {\r\n    result: { data: any; };\r\n    initialId: any,\r\n    valueinput: any,\r\n}\r\n\r\nexport default function Totalgetcoin(props, initialId: Props): ReactElement {\r\n    const [newId, setNewId] = useState(initialId)\r\n    const [Price, setPrice] = useState(0)\r\n    const [Price1, setPrice1] = useState(0)\r\n    const [Price2, setPrice2] = useState(0)\r\n    const WETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\r\n    const DAI = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\r\n    const OMG = \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\";\r\n    const MKR = \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\";\r\n    const USDT = \"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\";\r\n    console.log(\"Price\", Price)\r\n    async function onSave(valueinput: any) {\r\n        for (;;) {\r\n            const sum = [Price,Price1,Price2]\r\n            const response = await axios.post('http://localhost:5001/totalcoin', { //ETH\r\n                valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\r\n                fromtoken: WETH, //WETH -MKR\r\n                totoken: MKR,\r\n            })\r\n            setPrice(response.data)\r\n            console.log(\"FROM NODE = MKR = \", response.data);\r\n            // console.log(\"from node \", response.data)\r\n            const response2 = await axios.post('http://localhost:5001/totalcoin', {\r\n                // valueinput: valueinput,\r\n                valueinput: response.data.toString(),\r\n                fromtoken: MKR, //WETH -MKR\r\n                totoken: DAI,\r\n            })\r\n            setPrice1(response2.data)\r\n            console.log(\"FROM NODE = DAI = \", response2.data);\r\n            const response3 = await axios.post('http://localhost:5001/totalcoin', {\r\n                // valueinput: valueinput,\r\n                valueinput: response2.data.toString(),\r\n                fromtoken: DAI, //WETH -MKR\r\n                totoken: WETH,\r\n            })\r\n            setPrice2(response3.data)\r\n            console.log(\"FROM NODE = WETH = \", response3.data);\r\n        }\r\n\r\n        /* for (; ;) {\r\n             {\r\n                 console.log(\"valueinput\", valueinput);\r\n                 const response = await axios.post('http://localhost:5001/totalcoin', { //ETH\r\n                     valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\r\n                     fromtoken: WETH, //WETH -MKR\r\n                     totoken: MKR,\r\n                 })\r\n                 setPrice(response.data)\r\n                 console.log(\"FROM NODE = MKR = \", response.data);\r\n                 // console.log(\"from node \", response.data)\r\n                 const response2 = await axios.post('http://localhost:5001/totalcoin', {\r\n                     // valueinput: valueinput,\r\n                     valueinput: response.data.toString(),\r\n                     fromtoken: MKR, //WETH -MKR\r\n                     totoken: DAI,\r\n                 })\r\n                 setPrice1(response2.data)\r\n                 console.log(\"FROM NODE = DAI = \", response2.data);\r\n                 const response3 = await axios.post('http://localhost:5001/totalcoin', {\r\n                     // valueinput: valueinput,\r\n                     valueinput: response2.data.toString(),\r\n                     fromtoken: DAI, //WETH -MKR\r\n                     totoken: WETH,\r\n                 })\r\n                 setPrice2(response3.data)\r\n                 console.log(\"FROM NODE = WETH = \", response3.data);\r\n             }\r\n         }*/\r\n\r\n\r\n        //     const response4 = await axios.post('http://localhost:5001/totalcoin', {\r\n        //         // valueinput: valueinput,\r\n        //         valueinput: response3.data,\r\n        //         //response4 = eth\r\n        //     })\r\n    }\r\n    return (\r\n        <>\r\n            <form>\r\n                <label>\r\n                    ETH:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" onChange={(e) => setNewId(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    MKR:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" value={Price} />\r\n                </label>\r\n                <label>\r\n                    DAI:<input type=\"text\" name=\"name\" value={Price1} />\r\n                </label>\r\n                <label>\r\n                    ETH:<input type=\"text\" name=\"name\" value={Price2} />\r\n                </label>\r\n            </form>\r\n            <br></br>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => onSave(newId)}\r\n            > Exchang Token\r\n            </Button>\r\n            <MaterialTable\r\n                columns={[\r\n                    { title: \"ETH\", field: \"START\" },\r\n                    { title: \"MKR\", field: 'Price' },\r\n                    { title: \"DAI\", field: 'Price1' },\r\n                    { title: \"ETH\", field: 'Price2' },\r\n                ]}\r\n                data={[\r\n                    { START: 1, Price: Price, Price1: Price1, Price2: Price2 },\r\n                ]}\r\n                title=\"Demo\" />\r\n        </>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}