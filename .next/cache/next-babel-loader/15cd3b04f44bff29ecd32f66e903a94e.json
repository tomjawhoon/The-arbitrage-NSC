{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/pages/totalgetcoin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nexport default function Totalgetcoin(props, initialId) {\n  _s();\n\n  var _useState = useState(initialId),\n      newId = _useState[0],\n      setNewId = _useState[1];\n\n  var _useState2 = useState(0),\n      Price = _useState2[0],\n      setPrice = _useState2[1];\n\n  var _useState3 = useState(0),\n      Hash = _useState3[0],\n      setHash = _useState3[1];\n\n  function onSave(valueinput) {\n    console.log(\"valueinput\", valueinput);\n    axios.post('http://localhost:5001/testgetdata', {\n      valueinput: valueinput //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n\n    }).then(function (response) {\n      //console.log(\"response\", response.data); //1000.000\n      setPrice(response.data);\n      axios.post('http://localhost:5001/swapcoin', {\n        valueinput: valueinput\n      }).then(function (response) {\n        //console.log(\"Hash\", Hash.data); //1000.000\n        setHash(response.data);\n      });\n      console.log(\"Hash\", Hash); //1000.000\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: function onChange(e) {\n            return setNewId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"MKR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"USDT:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return onSave(newId);\n      },\n      children: \"Exchang Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Totalgetcoin, \"EYSYJTZuXpbqzpgMlv9wWkg5vbY=\");\n\n_c = Totalgetcoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Totalgetcoin\");","map":{"version":3,"sources":["/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/pages/totalgetcoin.tsx"],"names":["React","useState","Button","axios","Totalgetcoin","props","initialId","newId","setNewId","Price","setPrice","Hash","setHash","onSave","valueinput","console","log","post","then","response","data","e","target","value"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AAGA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAOA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAA6D;AAAA;;AAAA,kBAC9CL,QAAQ,CAACK,SAAD,CADsC;AAAA,MACjEC,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAE9CP,QAAQ,CAAC,CAAD,CAFsC;AAAA,MAEjEQ,KAFiE;AAAA,MAE1DC,QAF0D;;AAAA,mBAGhDT,QAAQ,CAAC,CAAD,CAHwC;AAAA,MAGjEU,IAHiE;AAAA,MAG3DC,OAH2D;;AAKxE,WAASC,MAAT,CAAgBC,UAAhB,EAAiC;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AACAX,IAAAA,KAAK,CAACc,IAAN,CAAW,mCAAX,EAAgD;AAC5CH,MAAAA,UAAU,EAAVA,UAD4C,CAChC;;AADgC,KAAhD,EAEGI,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAT,MAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAV,CAAR;AACAjB,MAAAA,KAAK,CAACc,IAAN,CAAW,gCAAX,EAA6C;AACzCH,QAAAA,UAAU,EAAVA;AADyC,OAA7C,EAEGI,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAP,QAAAA,OAAO,CAACO,QAAQ,CAACC,IAAV,CAAP;AACH,OALD;AAMAL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB,EATgB,CASU;AAC7B,KAZD;AAaH;;AACD,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA,yCACS;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,QAAQ,EAAE,kBAACU,CAAD;AAAA,mBAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,wCACQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA,yCACS;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAA,wCACQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI,QAAC,MAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMV,MAAM,CAACN,KAAD,CAAZ;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AA2BH;;GAhDuBH,Y;;KAAAA,Y","sourcesContent":["import Head from 'next/head'\nimport React, { ReactElement, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table'\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\ninterface Props {\n    result: { data: any; };\n    initialId: any,\n    valueinput: any,\n\n}\nexport default function Totalgetcoin(props, initialId: Props): ReactElement {\n    const [newId, setNewId] = useState(initialId)\n    const [Price, setPrice] = useState(0)\n    const [Hash, setHash] = useState(0)\n    \n    function onSave(valueinput: any) {\n        console.log(\"valueinput\", valueinput);\n        axios.post('http://localhost:5001/testgetdata', {\n            valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n        }).then(response => {\n            //console.log(\"response\", response.data); //1000.000\n            setPrice(response.data)\n            axios.post('http://localhost:5001/swapcoin', {\n                valueinput,\n            }).then(response => {\n                //console.log(\"Hash\", Hash.data); //1000.000\n                setHash(response.data)\n            });\n            console.log(\"Hash\", Hash) //1000.000\n        });\n    }\n    return (\n        <>\n            <form>\n                <label>\n                    ETH: <input type=\"text\" name=\"name\" onChange={(e) => setNewId(e.target.value)}/>\n                </label>\n                <label>\n                    MKR:<input type=\"text\" name=\"name\" />\n                </label>\n                <label>\n                    USDT:<input type=\"text\" name=\"name\" />\n                </label>\n                <label>\n                    ETH:<input type=\"text\" name=\"name\" />\n                </label>\n            </form>\n            <br></br>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onSave(newId)}\n            >\n                Exchang Token\n                        </Button>\n\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}