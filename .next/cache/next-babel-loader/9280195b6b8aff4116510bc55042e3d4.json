{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\nscno1\\\\pages\\\\test.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nvar useStylesbuttom = makeStyles(function (theme) {\n  return createStyles({\n    button: {\n      margin: theme.spacing(1)\n    }\n  });\n});\nvar useStyles = makeStyles({\n  root: {\n    maxWidth: 800\n  },\n  media: {\n    height: 800\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"left\",\n    alignItems: \"left\",\n    minHeight: \"50vh\"\n  },\n  test: {\n    display: \"flex\",\n    marginLeft: \"500px\"\n  },\n  testright: {\n    display: \"flex\",\n    marginLeft: \"1000px\",\n    marginTop: \"-350px\"\n  }\n});\nvar useStylesRight = makeStyles({\n  root: {\n    maxWidth: 350,\n    marginTop: \"-380px\",\n    marginLeft: \"950px\"\n  },\n  media: {\n    height: 500\n  }\n});\nexport var __N_SSP = true;\nexport default function Test(props, initialId) {\n  _s();\n\n  var _useState = useState(initialId),\n      newId = _useState[0],\n      setNewId = _useState[1];\n\n  var _useState2 = useState(0),\n      newtest = _useState2[0],\n      settest = _useState2[1];\n\n  function onSave(valueinput) {\n    console.log(\"valueinput\", valueinput);\n    axios.post('http://localhost:5001/testgetdata', {\n      //name: 'EIEIEI',\n      //number: 55,\n      valueinput: valueinput\n    }).then(function (response) {\n      console.log(\"response\", response.data); //1000.000\n\n      settest(response.data);\n    });\n  }\n\n  var data = props.result.data;\n\n  var formatPercent = function formatPercent(number) {\n    return \"\".concat(new Number(number).toFixed(2), \"%\");\n  };\n\n  var formatDollar = function formatDollar(number, maximumSignificantDigits) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumSignificantDigits: maximumSignificantDigits\n    }).format(number);\n  };\n\n  var classestest = useStylesbuttom();\n  var classes = useStyles();\n  var classesRight = useStylesRight();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter new ID\",\n        onChange: function onChange(e) {\n          return setNewId(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return onSave(newId);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"show value\",\n        value: newtest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Test, \"1Wj1/RzqbpbsXVmXHRSkD+tTQVo=\", false, function () {\n  return [useStylesbuttom, useStyles, useStylesRight];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/nscno1/pages/test.tsx"],"names":["React","useState","createStyles","makeStyles","axios","useStylesbuttom","theme","button","margin","spacing","useStyles","root","maxWidth","media","height","container","display","flexDirection","justifyContent","alignItems","minHeight","test","marginLeft","testright","marginTop","useStylesRight","Test","props","initialId","newId","setNewId","newtest","settest","onSave","valueinput","console","log","post","then","response","data","result","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","classestest","classes","classesRight","e","target","value"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Header from '../components/layouts/header'\r\nimport Layout from '../components/layouts/layout'\r\nimport Menu from '../components/layouts/menu'\r\nimport CoinGecko from 'coingecko-api';\r\nconst coinGeckoClient = new CoinGecko();\r\nimport MaterialTable from 'material-table'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Theme } from '@material-ui/core';\r\nimport axios from 'axios';\r\nconst useStylesbuttom = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 800,\r\n    },\r\n    media: {\r\n        height: 800,\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"left\",\r\n        minHeight: \"50vh\",\r\n    },\r\n    test: {\r\n        display: \"flex\",\r\n        marginLeft: \"500px\",\r\n    },\r\n    testright: {\r\n        display: \"flex\",\r\n        marginLeft: \"1000px\",\r\n        marginTop: \"-350px\"\r\n\r\n    }\r\n});\r\n\r\nconst useStylesRight = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        marginTop: \"-380px\",\r\n        marginLeft: \"950px\",\r\n    },\r\n    media: {\r\n        height: 500,\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    result: { data: any; };\r\n    initialId: any,\r\n    valueinput: any,\r\n\r\n}\r\nexport async function getServerSideProps(context) {\r\n    const params = {\r\n        order: CoinGecko.ORDER.MARKET_CAP_DESC\r\n    };\r\n    const result = await coinGeckoClient.coins.markets({ params });\r\n    return {\r\n        props: {\r\n            result\r\n        },\r\n    }\r\n}\r\nexport default function Test(props, initialId: Props): ReactElement {\r\n    const [newId, setNewId] = useState(initialId)\r\n    const [newtest, settest] = useState(0)\r\n \r\n    function onSave(valueinput: any) {\r\n        console.log(\"valueinput\", valueinput);\r\n        axios.post('http://localhost:5001/testgetdata', {\r\n            //name: 'EIEIEI',\r\n            //number: 55,\r\n            valueinput,\r\n        }).then(response => {\r\n            console.log(\"response\", response.data); //1000.000\r\n            settest(response.data)\r\n        });\r\n    }\r\n\r\n    const { data } = props.result;\r\n    const formatPercent = number =>\r\n        `${new Number(number).toFixed(2)}%`\r\n    const formatDollar = (number, maximumSignificantDigits) =>\r\n        new Intl.NumberFormat(\r\n            'en-US',\r\n            {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n                maximumSignificantDigits\r\n            })\r\n            .format(number);\r\n            \r\n    const classestest = useStylesbuttom();\r\n    const classes = useStyles();\r\n    const classesRight = useStylesRight();\r\n    return (\r\n\r\n            <div className={classes.container}>\r\n            <li>\r\n                <input type=\"text\" placeholder=\"Enter new ID\" onChange={(e) => setNewId(e.target.value)} />\r\n                <button onClick={() => onSave(newId)}>Save</button>\r\n                <input type=\"text\" placeholder=\"show value\" value= {newtest}  /> \r\n              \r\n            </li>\r\n            </div>\r\n\r\n          \r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}