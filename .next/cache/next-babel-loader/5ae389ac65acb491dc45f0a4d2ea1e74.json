{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AToMixz\\\\Desktop\\\\NSC\\\\nscno1\\\\pages\\\\test.tsx\";\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Layout from '../components/layouts/layout';\nimport CoinGecko from 'coingecko-api';\nconst coinGeckoClient = new CoinGecko();\nimport MaterialTable from 'material-table';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nconst useStylesbuttom = makeStyles(theme => createStyles({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 800\n  },\n  media: {\n    height: 800\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"left\",\n    alignItems: \"left\",\n    minHeight: \"50vh\"\n  },\n  test: {\n    display: \"flex\",\n    marginLeft: \"500px\"\n  },\n  testright: {\n    display: \"flex\",\n    marginLeft: \"1000px\",\n    marginTop: \"-350px\"\n  }\n});\nconst useStylesRight = makeStyles({\n  root: {\n    maxWidth: 350,\n    marginTop: \"-380px\",\n    marginLeft: \"950px\"\n  },\n  media: {\n    height: 500\n  }\n});\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC\n  };\n  const result = await coinGeckoClient.coins.markets({\n    params\n  });\n  return {\n    props: {\n      result\n    }\n  };\n}\nexport default function Test(props) {\n  const [newId, setNewId] = useState(initialId);\n  const [newtest, settest] = useState(0);\n  const {\n    data\n  } = props.result; //console.log(\"Show---->getAPI---->\", data)\n\n  const formatPercent = number => `${new Number(number).toFixed(2)}%`;\n\n  const formatDollar = (number, maximumSignificantDigits) => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumSignificantDigits\n  }).format(number);\n\n  const classestest = useStylesbuttom();\n  const classes = useStyles();\n  const classesRight = useStylesRight();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.test,\n          children: [\"Balance:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Token:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: \"WETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classestest.button //endIcon={<Icon>send</Icon>}\n          ,\n          children: \"Exchang Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"___________________________________________________________________________________________________________\"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Token:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: \"MKR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      columns: [{\n        title: \"Symbol\",\n        field: 'image'\n      }, {\n        title: \"Name\",\n        field: 'name'\n      }, {\n        title: \"24H Change\",\n        field: 'price24'\n      }, {\n        title: \"\tPrice ($)\",\n        field: 'current_price'\n      }, {\n        title: \"\tMarket cap ($)\",\n        field: 'market_cap'\n      }],\n      data: data.map(coin => ({\n        image: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: coin.image,\n          style: {\n            width: 25,\n            height: 25,\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 36\n        }, this),\n        name: coin.symbol.toUpperCase(),\n        price24: formatPercent(coin.price_change_percentage_24h),\n        current_price: coin.current_price,\n        market_cap: coin.market_cap\n      })) //{ image: \"test\", price24: \"test\", Price: \"test\", Marketcap: \"test\" },\n      ,\n      title: \"Coinmarketcap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/AToMixz/Desktop/NSC/nscno1/pages/test.tsx"],"names":["React","createStyles","makeStyles","Layout","CoinGecko","coinGeckoClient","MaterialTable","Card","Button","useStylesbuttom","theme","button","margin","spacing","useStyles","root","maxWidth","media","height","container","display","flexDirection","justifyContent","alignItems","minHeight","test","marginLeft","testright","marginTop","useStylesRight","getServerSideProps","context","params","order","ORDER","MARKET_CAP_DESC","result","coins","markets","props","Test","newId","setNewId","useState","initialId","newtest","settest","data","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","classestest","classes","classesRight","title","field","map","coin","image","width","marginRight","name","symbol","toUpperCase","price24","price_change_percentage_24h","current_price","market_cap"],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Header from '../components/layouts/header'\r\nimport Layout from '../components/layouts/layout'\r\nimport Menu from '../components/layouts/menu'\r\nimport CoinGecko from 'coingecko-api';\r\nconst coinGeckoClient = new CoinGecko();\r\nimport MaterialTable from 'material-table'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Theme } from '@material-ui/core';\r\nconst useStylesbuttom = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 800,\r\n    },\r\n    media: {\r\n        height: 800,\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"left\",\r\n        minHeight: \"50vh\",\r\n    },\r\n    test: {\r\n        display: \"flex\",\r\n        marginLeft: \"500px\",\r\n    },\r\n    testright: {\r\n        display: \"flex\",\r\n        marginLeft: \"1000px\",\r\n        marginTop: \"-350px\"\r\n\r\n    }\r\n});\r\n\r\nconst useStylesRight = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        marginTop: \"-380px\",\r\n        marginLeft: \"950px\",\r\n    },\r\n    media: {\r\n        height: 500,\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    result: { data: any; };\r\n\r\n}\r\nexport async function getServerSideProps(context) {\r\n    const params = {\r\n        order: CoinGecko.ORDER.MARKET_CAP_DESC\r\n    };\r\n    const result = await coinGeckoClient.coins.markets({ params });\r\n    return {\r\n        props: {\r\n            result\r\n        },\r\n    }\r\n}\r\nexport default function Test(props: Props): ReactElement {\r\n    const [newId, setNewId] = useState(initialId)\r\n    const [newtest, settest] = useState(0)\r\n    const { data } = props.result;\r\n    //console.log(\"Show---->getAPI---->\", data)\r\n    const formatPercent = number =>\r\n        `${new Number(number).toFixed(2)}%`\r\n\r\n    const formatDollar = (number, maximumSignificantDigits) =>\r\n        new Intl.NumberFormat(\r\n            'en-US',\r\n            {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n                maximumSignificantDigits\r\n            })\r\n            .format(number);\r\n    const classestest = useStylesbuttom();\r\n    const classes = useStyles();\r\n    const classesRight = useStylesRight();\r\n    return (\r\n        <Layout>\r\n            <div className={classes.container} >\r\n\r\n                <Card className={classes.root}>\r\n                    <div className={classes.test}>\r\n                        Balance:\r\n                     <input type=\"text\" name=\"name\" />\r\n                    </div>\r\n\r\n                    <form>\r\n                        <label>\r\n                            Token:\r\n                     <input type=\"text\" name=\"name\" value=\"WETH\" />\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n                    <br></br>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter coin\" />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classestest.button}\r\n                    //endIcon={<Icon>send</Icon>}\r\n                    >\r\n                        Exchang Token\r\n                        </Button>\r\n                    <>___________________________________________________________________________________________________________</>\r\n                    <br></br>\r\n                    <form>\r\n                        <label>\r\n                            Token:\r\n                     <input type=\"text\" name=\"name\" value=\"MKR\" />\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n                    <br></br>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Enter coin\" />\r\n\r\n                </Card>\r\n            </div>\r\n\r\n            <MaterialTable\r\n                columns={[\r\n                    { title: \"Symbol\", field: 'image' },\r\n                    { title: \"Name\", field: 'name' },\r\n                    { title: \"24H Change\", field: 'price24' },\r\n                    { title: \"\tPrice ($)\", field: 'current_price' },\r\n                    { title: \"\tMarket cap ($)\", field: 'market_cap' },\r\n                ]}\r\n                data={\r\n                    data.map((coin) => (\r\n                        {\r\n                            image: <img src={coin.image} style={{ width: 25, height: 25, marginRight: 10 }} />,\r\n                            name: coin.symbol.toUpperCase(),\r\n                            price24: formatPercent(coin.price_change_percentage_24h),\r\n                            current_price: coin.current_price,\r\n                            market_cap: coin.market_cap,\r\n                        }\r\n                    ))}\r\n                //{ image: \"test\", price24: \"test\", Price: \"test\", Marketcap: \"test\" },\r\n                title=\"Coinmarketcap\" />\r\n\r\n        </Layout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}