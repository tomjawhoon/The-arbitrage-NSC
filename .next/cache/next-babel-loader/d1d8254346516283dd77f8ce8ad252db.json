{"ast":null,"code":"import _regeneratorRuntime from \"/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/pages/totalgetcoin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nexport default function Totalgetcoin(props, initialId) {\n  _s();\n\n  var _useState = useState(initialId),\n      newId = _useState[0],\n      setNewId = _useState[1];\n\n  var _useState2 = useState(0),\n      Price = _useState2[0],\n      setPrice = _useState2[1];\n\n  var _useState3 = useState(0),\n      Price1 = _useState3[0],\n      setPrice1 = _useState3[1];\n\n  var _useState4 = useState(0),\n      Price2 = _useState4[0],\n      setPrice2 = _useState4[1];\n\n  var WETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n  var DAI = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n  var OMG = \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\";\n  var MKR = \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\";\n  var USDT = \"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\";\n  console.log(\"newId\", newId); // const [Price, setPrice] = useState(0)\n  // const [Hash, setHash] = useState(0)\n\n  function onSave(_x) {\n    return _onSave.apply(this, arguments);\n  }\n\n  function _onSave() {\n    _onSave = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(valueinput) {\n      var response, response2, response3, response4;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"valueinput\", valueinput);\n              _context.next = 3;\n              return axios.post('http://localhost:5001/totalcoin', {\n                //ETH\n                valueinput: valueinput,\n                //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n                fromtoken: WETH,\n                //WETH -MKR\n                totoken: MKR\n              });\n\n            case 3:\n              response = _context.sent;\n              setPrice(response.data);\n              _context.next = 7;\n              return axios.post('http://localhost:5001/totalcoin', {\n                // valueinput: valueinput,\n                valueinput: response.data,\n                fromtoken: MKR,\n                //WETH -MKR\n                totoken: USDT\n              });\n\n            case 7:\n              response2 = _context.sent;\n              setPrice1(response2.data);\n              _context.next = 11;\n              return axios.post('http://localhost:5001/totalcoin', {\n                // valueinput: valueinput,\n                valueinput: response2.data,\n                fromtoken: USDT,\n                //WETH -MKR\n                totoken: WETH\n              });\n\n            case 11:\n              response3 = _context.sent;\n              setPrice2(response3.data);\n              _context.next = 15;\n              return axios.post('http://localhost:5001/totalcoin', {\n                // valueinput: valueinput,\n                valueinput: response3.data //response4 = eth\n\n              });\n\n            case 15:\n              response4 = _context.sent;\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSave.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          onChange: function onChange(e) {\n            return setNewId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"MKR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          value: Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"USDT:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return onSave(newId);\n      },\n      children: \"Exchang Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Totalgetcoin, \"u6L9m669MI2NVolWsdEd1RAlqfM=\");\n\n_c = Totalgetcoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Totalgetcoin\");","map":{"version":3,"sources":["/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/pages/totalgetcoin.tsx"],"names":["React","useState","Button","axios","Totalgetcoin","props","initialId","newId","setNewId","Price","setPrice","Price1","setPrice1","Price2","setPrice2","WETH","DAI","OMG","MKR","USDT","console","log","onSave","valueinput","post","fromtoken","totoken","response","data","response2","response3","response4","e","target","value"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport React, { ReactElement, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table'\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\ninterface Props {\n    result: { data: any; };\n    initialId: any,\n    valueinput: any,\n}\nexport default function Totalgetcoin(props, initialId: Props): ReactElement {\n    const [newId, setNewId] = useState(initialId)\n    const [Price, setPrice] = useState(0)\n    const [Price1, setPrice1] = useState(0)\n    const [Price2, setPrice2] = useState(0)\n    const WETH = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n    const DAI = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n    const OMG = \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\";\n    const MKR = \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\";\n    const USDT = \"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\";\n\n    console.log(\"newId\", newId)\n    // const [Price, setPrice] = useState(0)\n    // const [Hash, setHash] = useState(0)\n    async function onSave(valueinput: any) {\n        console.log(\"valueinput\", valueinput);\n        const response = await axios.post('http://localhost:5001/totalcoin', { //ETH\n            valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n            fromtoken: WETH, //WETH -MKR\n            totoken:MKR,\n        })\n        setPrice(response.data)\n        const response2 = await axios.post('http://localhost:5001/totalcoin', {\n            // valueinput: valueinput,\n            valueinput: response.data,\n            fromtoken: MKR, //WETH -MKR\n            totoken:USDT,\n        })\n        setPrice1(response2.data)\n        const response3 = await axios.post('http://localhost:5001/totalcoin', {\n            // valueinput: valueinput,\n            valueinput: response2.data,\n            fromtoken: USDT, //WETH -MKR\n            totoken:WETH,\n        })\n        setPrice2(response3.data)\n        const response4 = await axios.post('http://localhost:5001/totalcoin', {\n            // valueinput: valueinput,\n            valueinput: response3.data,\n            //response4 = eth\n        })\n    }\n    return (\n        <>\n            <form>\n                <label>\n                    ETH:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" onChange={(e) => setNewId(e.target.value)} />\n                </label>\n                <label>\n                    MKR:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" value={Price} />\n                </label>\n                <label>\n                    USDT:<input type=\"text\" name=\"name\" />\n                </label>\n                <label>\n                    ETH:<input type=\"text\" name=\"name\" />\n                </label>\n            </form>\n            <br></br>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onSave(newId)}\n            >\n                Exchang Token\n                        </Button>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}