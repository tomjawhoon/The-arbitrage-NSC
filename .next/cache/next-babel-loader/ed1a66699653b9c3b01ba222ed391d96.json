{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/pages/totalgetcoin.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\nexport default function Totalgetcoin(props, initialId) {\n  const {\n    0: newId,\n    1: setNewId\n  } = useState(initialId);\n  const {\n    0: Price,\n    1: setPrice\n  } = useState(0);\n  const {\n    0: Price1,\n    1: setPrice1\n  } = useState(0);\n  const {\n    0: Price2,\n    1: setPrice2\n  } = useState(0);\n  console.log(\"newId\", newId); // const [Price, setPrice] = useState(0)\n  // const [Hash, setHash] = useState(0)\n\n  async function onSave(valueinput) {\n    console.log(\"valueinput\", valueinput);\n    const response = await axios.post('http://localhost:5001/totalcoin', {\n      valueinput //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n\n    });\n    setPrice(response.data);\n    const response2 = await axios.post('http://localhost:5001/totalcoin', {\n      // valueinput: valueinput,\n      valueinput: response.data\n    });\n    setPrice1(response2.data);\n    const response3 = await axios.post('http://localhost:5001/totalcoin', {\n      // valueinput: valueinput,\n      valueinput: response.data\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          onChange: e => setNewId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"MKR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter coin\",\n          value: Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"USDT:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ETH:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => onSave(newId),\n      children: \"Exchang Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/masterofnodejs/MasterofNode/The-arbitrage-NSC/pages/totalgetcoin.tsx"],"names":["React","useState","Button","axios","Totalgetcoin","props","initialId","newId","setNewId","Price","setPrice","Price1","setPrice1","Price2","setPrice2","console","log","onSave","valueinput","response","post","data","response2","response3","e","target","value"],"mappings":";;;AACA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AAGA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAMA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAA6D;AACxE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAACK,SAAD,CAAlC;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,CAAD,CAApC;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB,EANwE,CAOxE;AACA;;AACA,iBAAeU,MAAf,CAAsBC,UAAtB,EAAuC;AACnCH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,UAA1B;AACA,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8C;AACjEF,MAAAA,UADiE,CACrD;;AADqD,KAA9C,CAAvB;AAGAR,IAAAA,QAAQ,CAACS,QAAQ,CAACE,IAAV,CAAR;AACA,UAAMC,SAAS,GAAG,MAAMnB,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8C;AAClE;AACAF,MAAAA,UAAU,EAAEC,QAAQ,CAACE;AAF6C,KAA9C,CAAxB;AAIAT,IAAAA,SAAS,CAACU,SAAS,CAACD,IAAX,CAAT;AACA,UAAME,SAAS,GAAG,MAAMpB,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8C;AAClE;AACAF,MAAAA,UAAU,EAAEC,QAAQ,CAACE;AAF6C,KAA9C,CAAxB;AAIH;;AACD,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA,wCACQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC,YAA3C;AAAwD,UAAA,QAAQ,EAAGG,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,wCACQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,WAAW,EAAC,YAA3C;AAAwD,UAAA,KAAK,EAAEjB;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA,yCACS;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAA,wCACQ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI,QAAC,MAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAE,MAAMQ,MAAM,CAACV,KAAD,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AA0BH","sourcesContent":["import Head from 'next/head'\nimport React, { ReactElement, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table'\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\ninterface Props {\n    result: { data: any; };\n    initialId: any,\n    valueinput: any,\n}\nexport default function Totalgetcoin(props, initialId: Props): ReactElement {\n    const [newId, setNewId] = useState(initialId)\n    const [Price, setPrice] = useState(0)\n    const [Price1, setPrice1] = useState(0)\n    const [Price2, setPrice2] = useState(0)\n\n    console.log(\"newId\", newId)\n    // const [Price, setPrice] = useState(0)\n    // const [Hash, setHash] = useState(0)\n    async function onSave(valueinput: any) {\n        console.log(\"valueinput\", valueinput);\n        const response = await axios.post('http://localhost:5001/totalcoin', {\n            valueinput, //0.005 ค่าที่กรอกในช่องอ่านั้นแหละ\n        })\n        setPrice(response.data)\n        const response2 = await axios.post('http://localhost:5001/totalcoin', {\n            // valueinput: valueinput,\n            valueinput: response.data,\n        })\n        setPrice1(response2.data)\n        const response3 = await axios.post('http://localhost:5001/totalcoin', {\n            // valueinput: valueinput,\n            valueinput: response.data,\n        })\n    }\n    return (\n        <>\n            <form>\n                <label>\n                    ETH:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" onChange={(e) => setNewId(e.target.value)} />\n                </label>\n                <label>\n                    MKR:<input type=\"text\" name=\"name\" placeholder=\"Enter coin\" value={Price} />\n                </label>\n                <label>\n                    USDT:<input type=\"text\" name=\"name\" />\n                </label>\n                <label>\n                    ETH:<input type=\"text\" name=\"name\" />\n                </label>\n            </form>\n            <br></br>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onSave(newId)}\n            >\n                Exchang Token\n                        </Button>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}